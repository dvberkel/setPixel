#+title setPixel
#+author Daan van Berkel
#+email daan.v.berkel.1980+setpixel@gmail.com

* If All You Got Is =setPixel=

This document is an exploration into graphics algorithms starting
with the primitive =setPixel=.

* Setting the stage

We would like to explore various graphics algorithms, but we do not
want to do that in isolation. It would be great to see how our
algorithms play out. Therefore we our going creating a stage.

#+name: dream-code.setting-stage
#+begin_src js :exports code :tangle no
var stage = new Stage(640, 480);
stage.appendTo(document.getElementById('container'));

stage.setPixel(0,0);
#+end_src

The above code is how we would want to create a new stage and set a
pixel.

* Appendix
** Bower

We want to use [[http://bower.io/][bower]] to manage our external dependencies. But because
this is a self contained org-mode document. we have to generated the
=bower.json= file.

#+begin_src json :exports code :tangle bower.json :padline no
{
  "name": "setPixel",
  "version": "0.0.0",
  "homepage": "https://github.com/dvberkel/setPixel",
  "authors": [
    "Daan van Berkel <daan.v.berkel.1980@gmail.com>"
  ],
  "description": "an exploration into graphics algorithms starting from the primitive setPixel",
  "main": "setPixel.html",
  "keywords": [
    "setPixel"
  ],
  "license": "MIT",
  "private": true,
  "ignore": [
    "**/.*",
    "node_modules",
    "bower_components",
    "test",
    "tests"
  ],
  "devDependencies": {
    "jasmine": "~2.0.1"
  }
}
#+end_src

After tangling the document one can run the install command.

#+begin_src sh :tangle no :exports code :results silent
bower install
#+end_src

** Test Suite

We are using [[http://jasmine.github.io/2.0/introduction.html][Jasmine]] to test our code. The exported html document
should run the test suit. We therefor include the Jasmine runner in
our document.

#+begin_html
<link rel="stylesheet" type="text/css" href="bower_components/jasmine/lib/jasmine-core/jasmine.css">

<script type="text/javascript" src="bower_components/jasmine/lib/jasmine-core/jasmine.js"></script>
<script type="text/javascript" src="bower_components/jasmine/lib/jasmine-core/jasmine-html.js"></script>
<script type="text/javascript" src="bower_components/jasmine/lib/jasmine-core/boot.js"></script>

<!-- include source files here... -->

<!-- include spec files here... -->
<script type="text/javascript" src="spec/SetupSpec.js"></script>
#+end_html

We also create a =SetupSpec.js= to make sure this works correctly.

#+begin_src js :exports code :tangle spec/SetupSpec.js :mkdirp yes
  describe('Jasmine Project', function(){
      it('should run specification', function(){
          expect(true).toBeTruthy();
      });
  });
#+end_src
